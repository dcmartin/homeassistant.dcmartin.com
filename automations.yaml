###
### FRONTEND
###

- id: set_theme_at_startup
  alias: 'Set theme at startup'
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data_template:
      name: >-
        {% if states.input_select.theme_select is defined %}
          {{ states.input_select.theme_select.state }}
        {% else %}'default'{% endif %}

- id: set_theme_at_sunrise
  alias: 'Set theme at sunrise'
  trigger:
    - platform: sun
      event: sunrise
      offset: "+00:00:00"
  action:
    service: frontend.set_theme
    data:
      name: day

- id: set_theme_at_sunset
  alias: 'Set theme at sunset'
  trigger:
    - platform: sun
      event: sunset
      offset: "+00:00:00"
  action:
    service: frontend.set_theme
    data:
      name: night

- id: set_theme_select
  alias: 'Set theme'
  trigger:
    - platform: state
      entity_id: input_select.theme_select
  action:
    service: frontend.set_theme
    data_template:
      name: >
        {{ states.input_select.theme_select.state }}

###
### SONOS
###

- id: sonos_volume_limiter
  alias: sonos_volume_limiter
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: media_player.play1
      value_template: '{{ state.attributes.volume_level }}'
      above: 0.35
  condition:
    - condition: time
      after: '08:00:00'
      before: '20:00:00'
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.play1
        volume_level: 0.34

###
### STATE MONITOR 
###

# LIGHTS
- id: publish_lights
  alias: 'publish_lights'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.light != None }}'
    - platform: state
      entity_id: states.light
  action:
    - service: mqtt.publish
      data_template:
        topic: 'state/light/all'
        retain: true
        payload: >
          {%- for state in states.light -%}
            {%- if loop.first -%}{"category":"light","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","last_triggerd":"{{state.attributes.last_triggered}}"}
          {%- endfor -%}]}

# AUTOMATIONS
- id: publish_automations
  alias: 'publish_automations'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.automation != None }}'
    - platform: state
      entity_id: states.automation
  action:
    - service: mqtt.publish
      data_template:
        topic: 'state/automation/all'
        retain: true
        payload: >
          {%- for state in states.automation -%}
            {%- if loop.first -%}{"category":"automation","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","last_triggerd":"{{state.attributes.last_triggered}}"}
          {%- endfor -%}]}

# BINARY SENSORS
- id: publish_binary_sensors
  alias: 'publish_binary_sensors'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.binary_sensor != None }}'
    - platform: state
      entity_id: states.binary_sensor
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/binary_sensor/all'
        retain: true
        payload: >
          {% for state in states.binary_sensor -%}
            {%- if loop.first -%} {"category":"binary_sensor","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
          {%- endfor -%}]}

# CAMERAS
- id: publish_cameras
  alias: 'publish_cameras'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.camera != None }}'
    - platform: state
      entity_id: states.camera
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/camera'
        retain: true
        payload: >
          {% for state in states.camera -%}
            {%- if loop.first -%}{"category":"camera","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
          {%- endfor -%}]}

# DEVICE TRACKERS
- id: publish_device_trackers
  alias: 'publish_device_trackers'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.device_tracker != None }}'
    - platform: state
      entity_id: states.device_tracker
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/device_tracker'
        retain: true
        payload: >
          {"category":"device_tracker","date":{{ (now().timestamp()|int) }},"items":[
          {%- for state in states.device_tracker -%}
            {%- if state.attributes.source_type != None -%}
              {"name":"{{ state.name | lower }}","state":"{{state.state}}","attributes":"{{state}}","updated":"{{state.last_updated}}"}
              {%- if loop.last -%}{%- else -%},{%- endif -%}
            {%- endif -%}
          {%- endfor -%}]}

# MEDIA PLAYERS
- id: publish_media_players
  alias: 'publish_media_players'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.media_player != None }}'
    - platform: state
      entity_id: states.media_player
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/media_player'
        retain: true
        payload: >
          {% for state in states.media_player -%}
            {%- if loop.first -%}{"category":"media_player","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
          {%- endfor -%}]}

# SENSORS
- id: publish_sensors
  alias: 'publish_sensors'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.sensor != None }}'
    - platform: state
      entity_id: states.sensor
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/sensor'
        retain: true
        payload: >
         {% for state in states.sensor -%}
           {%- if loop.first -%}{"category":"sensor","date":{{ (now().timestamp()|int) }},"items":[
           {%- elif loop.last -%}
             {"name":"{{ state.name | lower }}","state":{{ state.state|tojson }}}
           {%- else -%}
             {"name":"{{ state.name | lower }}","state":{{ state.state|tojson }}},
           {%- endif -%}
          {%- endfor -%}]}

# ZONES
- id: publish_zones
  alias: 'publish_zones'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.zone != None }}'
    - platform: state
      entity_id: states.zone
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/zone'
        retain: true
        payload: >
          {% for state in states.zone -%}
            {%- if loop.first -%} {"category":"zone","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{"radius":{{state.attributes.radius}},"latitude":{{state.attributes.latitude}},"longitude":{{state.attributes.longitude}} }}
          {%- endfor -%}]}

# STATES
- id: publish_states
  alias: 'publish_states'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.state != None }}'
    - platform: state
      entity_id: states.state
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/all'
        retain: true
        payload: >
          {%- for i in states -%}
            {%- if loop.first -%}[{%- elif loop.last -%}]{%- else -%},{%- endif -%}
            {"name":"{{ i.name }}","domain":"{{ i.domain }}"}
          {%- endfor -%}

##
## DEBUG AUTOMATION
##

# publish all automations to MQTT 'debug/<platform>/<entity_id>'
- id: debug_automation
  alias: debug_automation
  initial_state: on
  trigger:
    - platform: state
      entity_id: states.automation
  action:
    - service: mqtt.publish
      data_template:
        topic: 'debug/{{ trigger.platform }}/{{ trigger.entity_id }}'
        retain: true
        payload: >-
          {%- macro dumpState(statePrefix, stateObj) -%}
            {{statePrefix ~ ": "}} {{- stateObj.state }}{{- "\n" -}}
            {{statePrefix ~ ".entity_id: "}} {{- stateObj.entity_id }}{{- "\n" -}}
            {{statePrefix ~ ".domain: "}} {{- stateObj.domain }}{{- "\n" -}}
            {{statePrefix ~ ".object_id: "}} {{- stateObj.object_id }}{{- "\n" -}}
            {{statePrefix ~ ".name: "}} {{- stateObj.name }}{{- "\n" -}}
            {{statePrefix ~ ".last_updated: "}} {{- stateObj.last_updated }}{{- "\n" -}}
            {{statePrefix ~ ".last_changed: "}} {{- stateObj.last_changed }}{{- "\n" -}}
            {%- for attrib in stateObj.attributes | sort() %}
              {%- if attrib is defined -%}
              {{- statePrefix ~ ".attributes." ~ attrib ~ ": " -}} {{- stateObj.attributes[attrib] -}}
              {{- "\n" -}}
              {%- endif -%}
            {%- endfor -%}
          {%- endmacro -%}
          {% set p = trigger.platform %}
          {{"trigger.platform: "}} {{ p }}{{- "\n" -}}
          {%- if p == "mqtt" -%}
            {{"trigger.topic: "}} {{ trigger.topic }}{{- "\n" -}}
            {{"trigger.payload: "}} {{ trigger.payload }}{{- "\n" -}}
            {{"trigger.payload_json: "}} {{ trigger.payload_json }}{{- "\n" -}}
            {{"trigger.qos: "}} {{ trigger.qos }}{{- "\n" -}}
            {%- endif -%}
            {%- if p == "event" or p == "sun" or p == "zone" -%}
            {{"trigger.event: "}} {{ trigger.event }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "numeric_state" -%}
            {{"trigger.above: "}} {{ trigger.above }}{{- "\n" -}}
            {{"trigger.below: "}} {{trigger.below }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "state" -%}
            {{"trigger.for: "}} {{ trigger.for }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "time" -%}
            {{"trigger.now: "}} {{ trigger.now }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "zone" -%}
            {{"trigger.zone: "}} {{ trigger.zone }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "state" or p == "numeric_state" or p == "template" or p == "zone" -%}
            {{"trigger.entity_id: "}} {{ trigger.entity_id }}{{- "\n" -}}{{- "\n" -}}
            {{"trigger.from_state: "}} {{- "\n" -}}
            -------------------{{- "\n" -}}
            {{ dumpState("trigger.from_state", trigger.from_state) }} {{- "\n" -}}
            trigger.to_state:{{- "\n" -}}
            -----------------{{- "\n" -}}
            {{ dumpState("trigger.to_state", trigger.to_state) }}
          {%- endif -%}

###
### INTERNET
###

- id: internet_slow
  alias: internet_slow
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_slow.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slow at
          {{ states.sensor.internet_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_slow
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          stdev {{ states.sensor.internet_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_statistics_mean.attributes }}

- id: internet_slow_dismiss
  alias: internet_slow_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_slow.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: internet_slow

- id: internet_fast
  alias: internet_fast
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_fast.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet fast at
          {{ states.sensor.internet_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_fast
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          stdev {{ states.sensor.internet_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_statistics_mean.attributes }}

- id: internet_fast_dismiss
  alias: internet_fast_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_fast.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: internet_fast

- id: internet_slow_persistent
  alias: internet_slow_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_slow_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_slow_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slowing at
          {{ states.sensor.internet_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_slow
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.internet_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_stdev_mean.attributes }}

- id: internet_fast_persistent
  alias: internet_fast_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.internet_fast_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.internet_fast_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet improving at
          {{ states.sensor.internet_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: internet_fast
        message: >
          Current: {{ states.sensor.internet_test_receive.state }} Mbps; 
          average {{ states.sensor.internet_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.internet_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/internet/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.internet_receive_stdev_mean.attributes }}

###
### INTRANET
###

- id: intranet_docsisgw_slow
  alias: intranet_docsisgw_slow
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_docsisgw_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_docsisgw_slow.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slow at
          {{ states.sensor.intranet_docsisgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_docsisgw_slow
        message: >
          Current: {{ states.sensor.intranet_docsisgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_docsisgw_receive_mean.state }} Mbps;
          stdev {{ states.sensor.intranet_docsisgw_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_docsisgw/download'
        retain: false
        payload: >
          {{ states.sensor.intranet_docsisgw_receive_statistics_mean.attributes }}

- id: intranet_docsisgw_slow_dismiss
  alias: intranet_docsisgw_slow_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_docsisgw_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_docsisgw_slow.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: intranet_docsisgw_slow

- id: intranet_docsisgw_fast
  alias: intranet_docsisgw_fast
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_docsisgw_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_docsisgw_fast.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet fast at
          {{ states.sensor.intranet_docsisgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_docsisgw_fast
        message: >
          Current: {{ states.sensor.intranet_docsisgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_docsisgw_receive_mean.state }} Mbps;
          stdev {{ states.sensor.intranet_docsisgw_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_docsisgw/download'
        retain: false
        payload: >
          {{ states.sensor.intranet_docsisgw_receive_statistics_mean.attributes }}

- id: intranet_docsisgw_fast_dismiss
  alias: intranet_docsisgw_fast_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_docsisgw_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_docsisgw_fast.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: intranet_docsisgw_fast

- id: intranet_docsisgw_slow_persistent
  alias: intranet_docsisgw_slow_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_docsisgw_slow_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_docsisgw_slow_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slowing at
          {{ states.sensor.intranet_docsisgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_docsisgw_slow
        message: >
          Current: {{ states.sensor.intranet_docsisgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_docsisgw_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.intranet_docsisgw_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_docsisgw/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.intranet_docsisgw_receive_stdev_mean.attributes }}

- id: intranet_docsisgw_fast_persistent
  alias: intranet_docsisgw_fast_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_docsisgw_fast_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_docsisgw_fast_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet improving at
          {{ states.sensor.intranet_docsisgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_docsisgw_fast
        message: >
          Current: {{ states.sensor.intranet_docsisgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_docsisgw_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.intranet_docsisgw_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_docsisgw/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.intranet_docsisgw_receive_stdev_mean.attributes }}

- id: intranet_dslgw_slow
  alias: intranet_dslgw_slow
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_dslgw_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_dslgw_slow.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slow at
          {{ states.sensor.intranet_dslgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_dslgw_slow
        message: >
          Current: {{ states.sensor.intranet_dslgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_dslgw_receive_mean.state }} Mbps;
          stdev {{ states.sensor.intranet_dslgw_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_dslgw/download'
        retain: false
        payload: >
          {{ states.sensor.intranet_dslgw_receive_statistics_mean.attributes }}

- id: intranet_dslgw_slow_dismiss
  alias: intranet_dslgw_slow_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_dslgw_slow
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_dslgw_slow.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: intranet_dslgw_slow

- id: intranet_dslgw_fast
  alias: intranet_dslgw_fast
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_dslgw_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_dslgw_fast.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet fast at
          {{ states.sensor.intranet_dslgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_dslgw_fast
        message: >
          Current: {{ states.sensor.intranet_dslgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_dslgw_receive_mean.state }} Mbps;
          stdev {{ states.sensor.intranet_dslgw_receive_statistics_mean.attributes.standard_deviation }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_dslgw/download'
        retain: false
        payload: >
          {{ states.sensor.intranet_dslgw_receive_statistics_mean.attributes }}

- id: intranet_dslgw_fast_dismiss
  alias: intranet_dslgw_fast_dismiss
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_dslgw_fast
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_dslgw_fast.state == 'off' }}
  action:
    - service: persistent_notification.dismiss
      data_template:
        notification_id: intranet_dslgw_fast

- id: intranet_dslgw_slow_persistent
  alias: intranet_dslgw_slow_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_dslgw_slow_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_dslgw_slow_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet slowing at
          {{ states.sensor.intranet_dslgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_dslgw_slow
        message: >
          Current: {{ states.sensor.intranet_dslgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_dslgw_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.intranet_dslgw_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_dslgw/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.intranet_dslgw_receive_stdev_mean.attributes }}

- id: intranet_dslgw_fast_persistent
  alias: intranet_dslgw_fast_persistent
  initial_state: on
  trigger:
    platform: state
    entity_id: binary_sensor.intranet_dslgw_fast_persistent
  condition:
    - condition: template
      value_template: >
        {{ states.binary_sensor.intranet_dslgw_fast_persistent.state == 'on' }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Internet improving at
          {{ states.sensor.intranet_dslgw_test.attributes.date | timestamp_custom("%a %b %d %I:%M %p") }}
        notification_id: intranet_dslgw_fast
        message: >
          Current: {{ states.sensor.intranet_dslgw_test_receive.state }} Mbps; 
          average {{ states.sensor.intranet_dslgw_receive_mean.state }} Mbps;
          average stdev {{ states.sensor.intranet_dslgw_receive_stdev_mean.state }} Mbps
    - service: mqtt.publish
      data_template:
        topic: 'status/intranet_dslgw/download/stdev'
        retain: false
        payload: >
          {{ states.sensor.intranet_dslgw_receive_stdev_mean.attributes }}

###
### MOTION
###

#
# from addons/motion/on_event_end.sh
#
# {
#   "device": "hassio",
#   "camera": "office",
#   "event": "586",
#   "start": 1538996926,
#   "elapsed": 7,
#   "end": 1538554232,
#   "date": 1539022150,
#   "images": [ "20181008110846-586-01", "20181008110853-586-00" ]
# }

- id: motion_event_end_notify
  alias: 'motion_event_end_notify'
  initial_state: 'on'
  trigger:
    - platform: mqtt
      topic: 'motion/+/+/event/end'
  condition: 
    condition: template
    value_template: >
      {{ is_state('input_boolean.motion_event_end_notify','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Motion {{ trigger.payload_json.camera }} camera
        notification_id: >
          {{ trigger.payload_json.device }}
        message: >-
          Detected {{ trigger.payload_json.elapsed }} seconds ({{trigger.payload_json.images|length}} frames) on
          {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

#
# from addons/motion/on_camera_{lost|found}.sh
#
# {
#   "device":"p40",
#   "camera":"upperpathgate",
#   "time":1539422950,
#   "status":"lost"
# }

- id: motion_camera_status_notify
  alias: 'motion_camera_status_notify'
  initial_state: 'on'
  trigger:
    - platform: mqtt
      topic: 'motion/+/+/status/+'
  condition: 
    condition: template
    value_template: >
      {{ is_state('input_boolean.motion_camera_status_notify','on') }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Camera {{ trigger.payload_json.camera }} {{ trigger.payload_json.status }} 
        notification_id: >
          {{ trigger.payload_json.device }}
        message: >-
          Camera {{ trigger.payload_json.camera }} on device {{ trigger.payload_json.device }} {{ trigger.payload_json.status }} at 
          {{ trigger.payload_json.time|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}

##
## MOTION
##

# change in known_device state 
- id: motion_camera_network_status_notify
  alias: 'motion_camera_network_status_notify'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: 
        - group.motion_camera_network_status
  condition: 
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ is_state('input_boolean.motion_camera_network_status_notify','on') }}
      - condition: template
        value_template: >
          {{ (trigger.from_state != None) and ((trigger.from_state.state|lower) != "unknown") and (trigger.to_state.state != trigger.from_state.state) }}
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          {{ state_attr(trigger.entity_id,"friendly_name") }} Status
        notification_id: >
          {{ state_attr(trigger.entity_id,"friendly_name") }}
          # {{ trigger.entity_id }}
        message: >
          {{ trigger.to_state.attributes.friendly_name }} changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

##
## SYSTEM STATUS OFFLINE
##

- id: notify_device_status
  alias: notify_device_status
  initial_state: on
  trigger:
    - platform: state
      entity_id: 
        - group.webcam_status
        - group.network_status
        - group.tivo_status
        - group.system_status
        - group.ageathome_devices
  condition: 
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (trigger.from_state.state|lower) != "unknown" }}'
      - condition: template
        value_template: '{{ is_state("binary_sensor.devices_notify_offline","on") }}'
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          {{ state_attr(trigger.entity_id,"friendly_name") }}
        notification_id: >
          {{ trigger.entity_id }}
        message: >
          OFFLINE:
          {% for state in state_attr(trigger.entity_id,"entity_id") %}
            {% if (states(state)|lower) != 'home' -%} 
              {{ state }} state: {{ states(state) }}
            {%- endif -%}
          {%- endfor -%}
    - service: mqtt.publish
      data_template:
        topic: 'status/change'
        retain: false
        payload: >
          {%- for state in state_attr(trigger.entity_id,"entity_id") -%}
            {%- if loop.first -%}{"status":"{{trigger.entity_id}}","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%}
            {"name":"{{state}}","status":"{{states(state)}}"}
          {%- endfor -%}]}

###
### AGE-AT-HOME
###

# devices offline ('not_home')
- id: aah_notify_devices_offline
  alias: aah_notify_devices_offline
  trigger:
    - platform: state
      entity_id:
        - device_tracker.roughfog
        - device_tracker.dampcloud
        - device_tracker.roughwind
        - device_tracker.quietwater
        - device_tracker.agedbush
        - device_tracker.livelypaper
    - platform: state
      entity_id:
        - camera.ageathome_kitchen
        - camera.ageathome_bathroom
        - camera.ageathome_frontdoor
        - camera.ageathome_road
        - camera.ageathome_gate
        - camera.ageathome_poolhouse
      to: 'not_home'
      for:
        minutes: 10
  condition: 
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ trigger.to_state.state == 'not_home' }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.devices_notify_offline','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/camera'
        payload: >
          {"device":"{{ trigger.to_state.attributes.friendly_name }}","status":"offline"}
    - service: notify.notify
      data_template:
        title: AGE AT HOME
        message: >
          {{ trigger.to_state.attributes.friendly_name }} is offline.
# DAVID
- id: notify_david
  alias: 'notify_david'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: 
        - group.devices_david
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ (trigger.from_state != None) and ((trigger.from_state.state|lower) != "unknown") and (trigger.to_state.state != trigger.from_state.state) }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
    # publish to mqtt
    - service: mqtt.publish
      data_template:
        topic: status/location
        payload: >-
          {% set what = trigger.entity_id.replace("group.devices_","")|lower %}
          {
           "source":{{trigger.entity_id|tojson}},
           "name": {{trigger.to_state.attributes.name|tojson}}
           "friendly_name": {{trigger.to_state.attributes.friendly_name|tojson}}
           "date:",{{(now().timestamp()|int)}},
           "from":{{ trigger.from_state.state|tojson }},
           "to":{{ trigger.to_state.state|tojson }},
           "person":{{ what }}
           "state": {{states(("sensor.status_",what)|join|lower) }}
          }
# KELI
- id: notify_keli
  alias: 'notify_keli'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - groups.devices_keli
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and ((trigger.from_state.state|lower) != "unknown") and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
# HALI
- id: notify_hali
  alias: 'notify_hali'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - group.devices_hali
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and ((trigger.from_state.state|lower) != "unknown") and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
# IAN
- id: notify_ian
  alias: 'notify_ian'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - group.devices_ian
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and ((trigger.from_state.state|lower) != "unknown") and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
# RILEY
- id: notify_riley
  alias: 'notify_riley'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - group.devices_riley
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and ((trigger.from_state.state|lower) != "unknown") and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
# ELLEN
- id: notify_ellen
  alias: 'notify_ellen'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - group.devices_ellen
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and ((trigger.from_state.state|lower) != "unknown") and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

##
## NOTIFICATIONS at LOCATIONS
##

# GATE
- id: aah_notify_gate
  alias: aah_notify_gate
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/gate/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_gate','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/gate'
        payload: >-
          { "type":"motion", "location":"gate", "triggered":{{- (now().timestamp()|int) -}}, "payload":{{- trigger.payload_json|tojson -}} }
    - service: notify.notify
      data_template:
        title: Gate motion
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.size }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

# POOLHOUSE
- id: aah_notify_poolhouse
  alias: aah_notify_poolhouse
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/poolhouse/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_poolhouse','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/poolhouse'
        payload: >-
          { "type":"motion", "location":"poolhouse", "triggered":{{- (now().timestamp()|int) -}}, "payload":{{- trigger.payload_json|tojson -}} }
    - service: notify.notify
      data_template:
        title: Poolhouse motion
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.size }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

# FRONTDOOR
- id: aah_notify_frontdoor
  alias: aah_notify_frontdoor
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/frontdoor/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_frontdoor','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/frontdoor'
        payload: >-
          { "type":"motion", "location":"frontdoor", "triggered":{{- (now().timestamp()|int) -}}, "payload":{{- trigger.payload_json|tojson -}} }
    - service: notify.notify
      data_template:
        title: Frontdoor motion
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.size }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

# KITCHEN
- id: aah_notify_kitchen
  alias: aah_notify_kitchen
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/kitchen/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_kitchen','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/kitchen'
        payload: >-
          { "type":"motion", "location":"kitchen", "triggered":{{- (now().timestamp()|int) -}}, "payload":{{- trigger.payload_json|tojson -}} }
    - service: notify.notify
      data_template:
        title: >-
          {{ trigger.payload_json.class }} motion
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.size }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

# BATHROOM
- id: aah_notify_bathroom
  alias: aah_notify_bathroom
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/bathroom/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_bathroom','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/bathroom'
        payload: >-
          { "type":"motion", "location":"bathroom", "triggered":{{- (now().timestamp()|int) -}}, "payload":{{- trigger.payload_json|tojson -}} }
    - service: notify.notify
      data_template:
        title: >-
          {{ trigger.payload_json.class }} motion
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.size }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

# ROAD
- id: aah_notify_road
  alias: aah_notify_road
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/road/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_road','on') }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'status/road'
        payload: >-
          { "type":"motion", "location":"road", "triggered":{{- (now().timestamp()|int) -}}, "payload":{{- trigger.payload_json|tojson -}} }
    - service: notify.notify
      data_template:
        title: >-
          {{ trigger.payload_json.class }} motion
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.size }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

## EXPERIMENTAL

- id: aah_publish_lowscore
  alias: very low score
  trigger:
    platform: numeric_state
    entity_id: sensor.last_why
    below: 0.50
  action:
    - service: mqtt.publish
      data_template:
        topic: 'ageathome/notify/score'
        payload: >
          {"location":{{states('sensor.last_where')|tojson}},"model":{{states('sensor.last_who')|tojson}},"class":{{states('sensor.last_what')|tojson}},"score":{{states('sensor.last_why')}}}

- id: aah_publish_highscore
  alias: very high score
  trigger:
    platform: numeric_state
    entity_id: sensor.last_why
    above: 0.98
  action:
    - service: mqtt.publish
      data_template:
        topic: 'ageathome/notify/score'
        payload: >
          {"location":{{states('sensor.last_where')|tojson}},"model":{{states('sensor.last_who')|tojson}},"class":{{states('sensor.last_what')|tojson}},"score":{{states('sensor.last_why')}}}

# INTERIOR GATE

- id: gate_open
  alias: 'Gate Open'
  initial_state: on
  trigger:
    platform: state
    entity_id: cover.gate_opener
    from: 'closed'
    to: 'open'
  action:
    service: script.turn_on
    entity_id: script.gate_door_alarm

- id: gate_closed
  alias: 'Gate Closed'
  initial_state: on
  trigger:
    platform: state
    entity_id: cover.gate_opener
    from: 'open'
    to: 'closed'
  action:
    service: script.turn_off
    entity_id: script.gate_door_alarm

- id: gate_opengate
  alias: 'Open Gate'
  initial_state: on
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: OPEN_INTERIORGATE
  action:
    service: cover.open_cover
    entity_id: cover.gate_opener

- id: gate_closegate
  alias: 'Close Gate'
  initial_state: on
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSE_INTERIORGATE
  action:
    service: cover.close_cover
    entity_id: cover.gate_opener

## MODEL TESTERS

# PERSON WRONG
- id: aah_wrong_person_detector
  alias: aah_wrong_person_detector
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/#'
  condition: 
     - condition: template
       # {% set trigger = { "payload_json": { "class": "david", "location": "kitchen" } } %}
       # {{ not ( states(("sensor.location_",trigger.payload_json.class)|join|lower) in ("home","unknown") }}
       value_template: >
         {% if trigger.payload_json is defined %}
         {%- for state in states.group.people.attributes.entity_id -%}
           {%- set w = state.replace('sensor.location_','')|lower -%}
           {%- if w == trigger.payload_json.class|lower and not states(state)|lower in ('home','unknown') -%} 
            {{ true }}
           {%- endif -%}
         {%- endfor -%}
         {%- else -%} false {%- endif -%}
  action:
    # send MQTT message that a false-positive has occurred
    - service: mqtt.publish
      data_template:
        topic: >
          wrong/person/{{trigger.payload_json.class|tojson}}
        payload: >-
          {
           "type":"not_home",
           "triggered":{{(now().timestamp()|int)}},
           "device":{{trigger.payload_json.device|tojson}},
           "id":{{trigger.payload_json.id|tojson}},
           "location":{{trigger.payload_json.location|tojson}},
           "model":{{trigger.payload_json.model|tojson}},
           "class":{{trigger.payload_json.class|tojson}},
           "score":{{trigger.payload_json.score|float}},
           "date":{{trigger.payload_json.date|int}},
           "size":{{trigger.payload_json.size|int}},
           "box":{{trigger.payload_json.box|tojson}},
           "classes":[
            {%- set scores = trigger.payload_json.scores|sort(true,attribute="score") -%}
            {%- for score in scores -%}
              {%- if not loop.last -%} "{{ score.classifier_id }}", {%- else -%} "{{ score.classifier_id }}" {%- endif -%}
            {%- endfor -%}]
          }
# NOTIFY EMAIL
- id: aah_wrong_person_email
  alias: aah_wrong_person_email
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'wrong/person/#'
  condition:
    condition: and
    conditions:
      - condition: template
        # test if message received in last 60 seconds
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        value_template: >
          {% if trigger.payload_json.location is defined %}
            {{ not states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) in ("unknown",null) }}
          {% else %}
            {{ false }}
          {% endif %}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_notify_email','on') }}
  action:
    - service: notify.ageathome_smtp
      data_template:
        title: FALSE POSITIVE
        # {% set trigger = { "payload_json": { "triggered": now().timestamp()|int, "device": "roughfog", "id": "YYYYMMDDHHMMSS.####","location": "kitchen","model":"roughfog-#####","class":"david","score":0.90,"date",(now().timestamp()|int) - 30 } } %} {{ trigger }}
        message: >
          SAW {{ trigger.payload_json.class }} in {{ trigger.payload_json.location }} size {{ trigger.payload_json.size }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          BUT {{ trigger.payload_json.class }} is {{ states(("sensor.location_",trigger.payload_json.class)|join|lower) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false
# NOTIFY IOS
- id: aah_wrong_person_notify
  alias: aah_wrong_person_notify
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'wrong/person/#'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '20:00'
      - condition: template
        # test if message received in last 60 seconds (should be sensor value set by input).
        value_template: >
          {{ ((now().timestamp()|int) - trigger.payload_json.date) < 60 }}
      - condition: template
        # test for errant triggers and undefined camera (start-up issues)
        value_template: >
          {% if trigger.payload_json.location is defined %}
            {{ not states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) in ("unknown",null) }}
          {% else %}
            {{ false }}
          {% endif %}
      - condition: template
        value_template: >
          {{ is_state('binary_sensor.ageathome_learning','on') }}
  action:
    - service: notify.ios_dcms_iphone7
      data_template:
        title: FALSE POSITIVE
        message: >
          {{ trigger.payload_json.class }} seen {{ trigger.payload_json.location }} size {{ trigger.payload_json.size }}
          http://www.dcmartin.com/CGI/aah-classify.cgi?db={{ trigger.payload_json.device }}&id={{ trigger.payload_json.id }}
        data:
          push:
            badge: 0
            # sound: "US-EN-Morgan-Freeman-Motion-Detected.wav"
            category: camera 
          entity_id: >
            {{ ("camera.",trigger.payload_json.location,"_image_annotated")|join|lower }}
          action_data:
            entity_id: >
              {{ ("camera.",trigger.payload_json.location,"_image_annotated")|join|lower }}
            my_custom_data: >
              {{ trigger.payload_json|tojson }}
# CAPTURE RESPONSE from IOS NOTIFICATIONS
# {
#  "sourceDeviceName": "Robbie's iPhone 7 Plus",
#  "sourceDeviceID": "robbies_iphone_7_plus",
#  "actionName": "SOUND_ALARM",
#  "sourceDevicePushId": "ab9f02fe-6ac6-47b8-adeb-5dd87b489156",
#  "textInput": "",
#  "actionData": {}
# }
- id: aah_correction
  alias: aah_correction
  initial_state: on
  trigger:
    -  platform: event
       event_type: ios.notification_action_fired
       # event_data:
       #   actionName: SOUND_ALARM
  action:
    - service: mqtt.publish
      data_template:
        topic: 'correction/entity'
        payload: >-
          {
           "type":"correction",
           "triggered":{{(now().timestamp()|int)}},
           "payload":{{trigger.payload_json|tojson}},
          }
    - service: notify.ios_dcms_iphone7
      data_template:
        title: RECEIVED
        message: >
          {{ trigger.payload_json.textInput }} {{ trigger.payload_json.actionData }} 

# VEHICLE
- id: aah_wrong_vehicle_detector
  alias: aah_wrong_vehicle_detector
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/road/#'
  condition: 
     - condition: template
       value_template: >
         {{ trigger.payload_json.class == "martin_c70" and states("sensor.location_david")|lower == "home" }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'wrong/vehicle/{{ trigger.payload_json.class }}'
        payload: >-
          {
           "type":"vehicle_not_road",
           "triggered":{{(now().timestamp()|int)}},
           "device":{{trigger.payload_json.device|tojson}},
           "id":{{trigger.payload_json.id|tojson}},
           "location":{{trigger.payload_json.location|tojson}},
           "model":{{trigger.payload_json.model|tojson}},
           "class":{{trigger.payload_json.class|tojson}},
           "score":{{trigger.payload_json.score|float}},
           "date":{{trigger.payload_json.date|int}},
           "size":{{trigger.payload_json.size|int}},
           "box":{{trigger.payload_json.box|tojson}},
           "scores":{{trigger.payload_json.scores}}
          }
- id: aah_wrong_vehicle_notify
  alias: aah_wrong_vehicle_notify
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'wrong/vehicle/#'
  condition: 
    - condition: template
      value_template: >
        {{ is_state('binary_sensor.ageathome_learning','on') }}
  action:
    - service: notify.ios_dcms_iphone7
      data_template:
        title: WRONG VEHICLE
        message: >-
          saw {{ trigger.payload_json.class }} ( {{ states(("sensor.location_",trigger.payload_json.class)|join|lower) }} )
          in {{ trigger.payload_json.location }} 
          when {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          by {{ trigger.payload_json.model }} 
          level {{ trigger.payload_json.score|float }}
          image {{ trigger.payload_json.id }} size {{ trigger.payload_json.size }}
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false
